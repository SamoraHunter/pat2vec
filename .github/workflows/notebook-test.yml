
name: Notebook Test

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      DEBIAN_FRONTEND: noninteractive

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Prepare Local Runner (Install Cert & Dependencies)
        if: ${{ env.ACT }}
        run: |
          # Step 1: Install the absolute minimum to get the cert tool
          apt-get update
          apt-get install -y ca-certificates sudo gnupg

          # Step 2: Check for the mounted cert and update the system trust store IMMEDIATELY
          CERT_PATH="/usr/local/share/ca-certificates/kch_oct_2024_root.crt"
          if [ -f "$CERT_PATH" ]; then
            echo "✅ Corporate certificate found. Updating system trust store..."
            update-ca-certificates
          else
            echo "⚠️ Corporate certificate not found. Proceeding without it."
          fi

          # Step 3: Now that certs are trusted, run a full update and install everything else
          echo "INFO: Running full system update and installing dependencies..."
          apt-get update
          apt-get install -y \
            lsb-release \
            python3-pip \
            git \
            iputils-ping \
            jq \
            tzdata

          # Step 4: Set Timezone
          ln -fs /usr/share/zoneinfo/Europe/London /etc/localtime
          dpkg-reconfigure -f noninteractive tzdata

          # Step 5: Install Python 3.10 from PPA (using firewall-friendly hkps)
          echo "INFO: Adding deadsnakes PPA for Python 3.10..."
          gpg --keyserver hkps://keyserver.ubuntu.com --recv-keys F23C5A6CF475977595C89F51BA6932366A755776
          gpg --export BA6932366A755776 | gpg --dearmor -o /usr/share/keyrings/deadsnakes-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/deadsnakes-archive-keyring.gpg] http://ppa.launchpadcontent.net/deadsnakes/ppa/ubuntu $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/deadsnakes-ppa.list

          apt-get update
          apt-get install -y python3.10 python3.10-venv python3.10-distutils

          # Step 6: Set Python 3.10 as Default
          update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.10 1
          update-alternatives --install /usr/bin/python python /usr/bin/python3.10 1

      - name: Setup pat2vec
        run: |
          cd $GITHUB_WORKSPACE
          sed -i 's/apt-get install/apt-get install -y/g' install_pat2vec.sh
          sed -i 's/pip install/pip install --trusted-host pypi.org --trusted-host files.pythonhosted.org/g' install_pat2vec.sh

          if ping -c 1 dh-cap02 &> /dev/null; then
            echo "mirror Server is available"
            bash install_pat2vec.sh --proxy
          else
            echo "mirror Server is not available"
            bash install_pat2vec.sh
          fi

      - name: Debug virtual environment
        run: |
          VENV_PATH=$(find $GITHUB_WORKSPACE -type d -name "pat2vec_env")
          echo "VENV_PATH=$VENV_PATH" >> $GITHUB_ENV
          source "$VENV_PATH/bin/activate"
          which python
          python --version

      - name: Run notebook test
        run: |
          set -e
          cd $GITHUB_WORKSPACE
          source "$VENV_PATH/bin/activate"
          pytest --nbmake --nbmake-timeout=1200 notebooks/test_notebook.py


      - name: Clean Up Generated Files for Local Act Runner
        if: ${{ env.ACT }}
        run: |
          echo "INFO: Cleaning up directories created during the test run..."

          # Remove generated directories
          rm -rf notebooks/new_project
          rm -rf notebooks/new_project_ipw
          rm -rf notebooks/treatment_doc_extract
