name: Notebook Test

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      DEBIAN_FRONTEND: noninteractive

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install dependencies for local (act) runner
        if: ${{ env.ACT }}
        run: |
          apt-get update
          apt-get install -y sudo git curl gnupg ca-certificates

      - name: 1. Install Corporate Certificate (if present)
        run: |
          # This step is designed to work both locally with `act` (where the cert is mounted)
          # and on the public GitHub runner (where it is not).
          CERT_PATH="/usr/local/share/ca-certificates/kch_certauth.crt"
          if [ -f "$CERT_PATH" ]; then
            echo "✅ Corporate certificate found. Updating system trust store..."
            sudo update-ca-certificates
          else
            echo "⚠️ Corporate certificate not found. Proceeding without it (standard public runner environment)."
          fi

      - name: Setup Runner Environment
        run: |


          # --- 2. Install All System Dependencies Non-Interactively ---
          sudo apt-get update
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -y \
            lsb-release \
            python3-pip \
            git \
            iputils-ping \
            jq \
            tzdata

          # --- 3. Set Timezone to Europe/London ---
          sudo ln -fs /usr/share/zoneinfo/Europe/London /etc/localtime
          sudo dpkg-reconfigure -f noninteractive tzdata

          # --- 4. Install Python 3.10 from PPA ---
          sudo gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys F23C5A6CF475977595C89F51BA6932366A755776
          sudo gpg --export BA6932366A755776 | sudo gpg --dearmor -o /usr/share/keyrings/deadsnakes-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/deadsnakes-archive-keyring.gpg] http://ppa.launchpadcontent.net/deadsnakes/ppa/ubuntu $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/deadsnakes-ppa.list

          sudo apt-get update
          sudo apt-get install -y python3.10 python3.10-venv python3.10-distutils

          # --- 5. Set Python 3.10 as Default ---
          sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.10 1
          sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.10 1
          # The pip upgrade command has been removed as it was causing the failure.

      - name: Setup pat2vec
        run: |
          cd $GITHUB_WORKSPACE
          sed -i 's/apt-get install/apt-get install -y/g' install_pat2vec.sh
          # The --trusted-host flag is no longer necessary now that the root CA is trusted
          # We can remove this line for a cleaner script, but it's harmless to leave.
          sed -i 's/pip install/pip install --trusted-host pypi.org --trusted-host files.pythonhosted.org/g' install_pat2vec.sh

          if ping -c 1 dh-cap02 &> /dev/null; then
            echo "mirror Server is available"
            echo "::set-output name=server_available::true"
            echo "install_pat2vec.sh --proxy"
            bash install_pat2vec.sh --proxy
          else
            echo "mirror Server is not available"
            echo "::set-output name=server_available::false"
            echo "install_pat2vec.sh"
            bash install_pat2vec.sh
          fi

      - name: Debug virtual environment
        run: |
          VENV_PATH=$(find $GITHUB_WORKSPACE -type d -name "pat2vec_env")
          echo "VENV_PATH=$VENV_PATH" >> $GITHUB_ENV
          source "$VENV_PATH/bin/activate"
          which python
          python --version

      - name: Run notebook test
        run: |
          set -e
          cd $GITHUB_WORKSPACE
          source "$VENV_PATH/bin/activate"
          # Ensure test dependencies like pytest and nbmake are installed via your install_pat2vec.sh script
          pytest --nbmake --nbmake-timeout=1200 notebooks/test_notebook.py
